// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;

#nullable disable

namespace StudentMarkManagement.Entities
{
    public partial class StudentMarkManagementDBEntities : DbContext
    {
        public StudentMarkManagementDBEntities()
        {
        }

        public StudentMarkManagementDBEntities(DbContextOptions<StudentMarkManagementDBEntities> options)
            : base(options)
        {
        }

        public virtual DbSet<Departments> Departments { get; set; }
        public virtual DbSet<student_Details> student_Details { get; set; }
        public virtual DbSet<student_Marks> student_Marks { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
                optionsBuilder.UseSqlServer("Data Source=(localdb)\\MSSQLLocalDB;Initial Catalog=StudentMarkManagement;Integrated Security=True");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<Departments>(entity =>
            {
                entity.Property(e => e.Department_name).IsUnicode(false);
            });

            modelBuilder.Entity<student_Details>(entity =>
            {
                entity.Property(e => e.Created_Time_Stamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Department).IsUnicode(false);

                entity.Property(e => e.Email).IsUnicode(false);

                entity.Property(e => e.Gender).IsUnicode(false);

                entity.Property(e => e.Name).IsUnicode(false);

                entity.Property(e => e.Updated_Time_Stamp).HasDefaultValueSql("(getdate())");
            });

            modelBuilder.Entity<student_Marks>(entity =>
            {
                entity.HasKey(e => e.Student_Marks_Id)
                    .HasName("PK_student_Marks_1");

                entity.Property(e => e.Created_Time_Stamp).HasDefaultValueSql("(getdate())");

                entity.Property(e => e.Updated_Time_Stamp).HasDefaultValueSql("(getdate())");

                entity.HasOne(d => d.Student)
                    .WithMany(p => p.student_Marks)
                    .HasForeignKey(d => d.Student_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_student_Marks_student_Details");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}